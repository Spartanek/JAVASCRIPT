// –ó–∞–≤–¥–∞–Ω–Ω—è 1
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é logItems(array), —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤ —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª for, —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ —Ñ–æ—Ä–º–∞—Ç—ñ [–Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞] - [–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞].
// –ù—É–º–µ—Ä–∞—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É ['Mango', 'Poly', 'Ajax'] –∑ —ñ–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ '1 - Mango', –∞ –¥–ª—è —ñ–Ω–¥–µ–∫—Å—É 2 –≤–∏–≤–µ–¥–µ '3 - Ajax'.
const logItems = function (array) {
  for (let i = 0; i < array.length; i++) {
    const element = array[i];
    console.log(`${i + 1}:>> , ${array[i]}`);
    //   —á–∏ –º–µ–Ω—ñ —Ç—Ä–µ–±–∞ —è–∫–æ—Å—å –≤ return –≤–∏–Ω–æ—Å–∏—Ç—å?
    // const result = ;
    // return result;
  }
};
logItems(["Mango", "Poly", "Ajax", "Andre", "Amanda", "Pamela"]);
// –ó–∞–≤–¥–∞–Ω–Ω—è 2
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É –≤–∞—Ä—Ç–æ—Å—Ç—ñ –≥—Ä–∞–≤—ñ—é–≤–∞–Ω–Ω—è –ø—Ä–∏–∫—Ä–∞—Å. –î–ª—è —Ü—å–æ–≥–æ —Å—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é calculateEngravingPrice(message, pricePerWord) –ø—Ä–∏–π–º–∞—é—á—É —Ä—è–¥–æ–∫ (–≤ —Ä—è–¥–∫—É –±—É–¥—É—Ç—å —Ç—ñ–ª—å–∫–∏ —Å–ª–æ–≤–∞ —ñ –ø—Ä–æ–≥–∞–ª–∏–Ω–∏) —ñ —Ü—ñ–Ω—É –≥—Ä–∞–≤—ñ—é–≤–∞–Ω–Ω—è –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞, —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —Ü—ñ–Ω—É –≥—Ä–∞–≤—ñ—é–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö —Å–ª—ñ–≤ –≤ —Ä—è–¥–∫—É.
// (–≤ —Ä—è–¥–∫—É –±—É–¥—É—Ç—å —Ç—ñ–ª—å–∫–∏ —Å–ª–æ–≤–∞ —ñ –ø—Ä–æ–≥–∞–ª–∏–Ω–∏) —è–∫ —Ü–µ —á–µ—Ä–µ–∑ if –∑—Ä–æ–±–∏—Ç–∏?
// const messagePropmt = prompt("–í–ø–∏—à—ñ—Ç—å —Å–ª–æ–≤–∞ –¥–ª—è –≥—Ä–∞–≤—ñ—é–≤–∞–Ω–Ω—è");
// –¢–†–ï–ë–ê –ü–û–°–¢–Ü–ô–ù–û –ü–ï–†–ï–í–û–î–ò–¢–ò PROMPT –£ NUMBER
// const numberPropmt = prompt('–í–ø–∏—à—ñ—Ç—å —Ü—ñ–Ω—É –¥–ª—è –≥—Ä–∞–≤—ñ—é–≤–∞–Ω–Ω—è –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞');
// typeof pricePerWord == "number" –∞–±–æ  !isNaN(pricePerWord)
const calculateEngravingPrice = function (message, pricePerWord) {
  if (
    //   —è–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —â–æ–± –≤ message –Ω–µ –±—É–ª–æ number
    //   typeof message === "string"
    //   &&
    !message.includes(",", "-", "?", "!", ";", "'") &&
    typeof pricePerWord === "number" &&
    !isNaN(pricePerWord)
  ) {
    const messageSplit = message.split(" ");
    console.log(`—Å–ø–∏—Å–æ–∫ —Å–ª—ñ–≤ :>> ${messageSplit}`);
    // const smallMath = message.length * pricePerWord;
    // return smallMath;
    return messageSplit.length * pricePerWord;
  }
  //  —è–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—å return —á–∏ –±—ñ–ª—è –Ω—å–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑–∞–ª–∏—à–∞—Ç–∏ —á–∏ —è–∫?
  return "–Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ–≤–µ—Ä–Ω—É—Ç–∞ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å";
};
// console.log(`—Ü—ñ–Ω–∞: ${calculateEngravingPrice(messagePropmt, numberPropmt)}`);
// –ó–∞–≤–¥–∞–Ω–Ω—è 3
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é findLongestWord(string), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –¥–æ–≤—ñ–ª—å–Ω–∏–π —Ä—è–¥–æ–∫ (–≤ —Ä—è–¥–∫—É –±—É–¥—É—Ç—å —Ç—ñ–ª—å–∫–∏ —Å–ª–æ–≤–∞ —ñ –ø—Ä–æ–≥–∞–ª–∏–Ω–∏) —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–∞–π–¥–æ–≤—à–µ —Å–ª–æ–≤–æ –≤ —Ü—å–æ–º—É —Ä—è–¥–∫—É.

const findLongestWord = function (string) {
  let maxCharacter = "";
  const splited = string.split(" ");
  for (let i = 0; i < splited.length; i++) {
    let element = splited[i];
    if (element.length > maxCharacter.length) {
      maxCharacter = element;
    }
  }
  return maxCharacter;
};
const theLongestWord = findLongestWord("Anna Artem Vadym Elizabeth");
console.log(theLongestWord);
// –ó–∞–≤–¥–∞–Ω–Ω—è 4
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatString(string) —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Ä—è–¥–æ–∫ —ñ —Ñ–æ—Ä–º–∞—Ç—É—î –π–æ–≥–æ —è–∫—â–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ.
// –Ø–∫—â–æ –¥–æ–≤–∂–∏–Ω–∞ —Ä—è–¥–∫–∞ –Ω–µ –ø–µ—Ä–µ–≤–∏—â—É—î 40 —Å–∏–º–≤–æ–ª—ñ–≤, —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î —ó—ó –≤ –ø–æ—á–∞—Ç–∫–æ–≤–æ–º—É –≤–∏–≥–ª—è–¥—ñ.
// –Ø–∫—â–æ –¥–æ–≤–∂–∏–Ω–∞ –±—ñ–ª—å—à–µ 40 —Å–∏–º–≤–æ–ª—ñ–≤, —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –æ–±—Ä—ñ–∑–∞—î —Ä—è–¥–æ–∫ –¥–æ 40-–∫–∞ —Å–∏–º–≤–æ–ª—ñ–≤ —ñ –¥–æ–¥–∞—î –≤ –∫—ñ–Ω–µ—Ü—å —Ä—è–¥–∫–∞ —Ç—Ä–∏ –∫—Ä–∞–ø–∫–∏ '...', –ø—ñ—Å–ª—è —á–æ–≥–æ –ø–æ–≤–µ—Ä—Ç–∞—î —É–∫–æ—Ä–æ—á–µ–Ω—É –≤–µ—Ä—Å—ñ—é.
const formatString = function (string) {
  if (string.length <= 40) {
    return `–ù—ñ—á–æ–≥–æ –Ω–µ –∑–º—ñ–Ω–∏–ª–æ—Å—å ${string}`;
  }
  if (string.length > 40) {
    //    —á–∏ –∫—Ä–∞—â–µ splice?
    //   –©–æ—Å—å –Ω–µ –≤–∏—Ö–æ–¥–∏–ª–æ
    // let a = string.slice(0, 40);
    // a.shift("...");
    // return a;
    //   –∞ —Ç–∞–∫ —á–æ–≥–æ—Å—å –≤–∏–π—à–ª–æ
    return string.slice(0, 40) + "...";
  }
  return "–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫";
};
console.log(
  formatString("–Ø –ø–∏—à—É –¥—É—É—É–∂–µ–µ –¥–æ–æ–æ–æ–æ–≤–≥–∏–∏–∏–∏–∏–π —Ç–µ–µ–µ–µ–∫—Å—Ç –Ω—É –ø—Ä—è–º –¥—É—É—É–∂–µ")
);
// –ó–∞–≤–¥–∞–Ω–Ω—è 5
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é checkForSpam(message), –ø—Ä–∏–π–º–∞—é—á—É 1 –ø–∞—Ä–∞–º–µ—Ç—Ä message ‚Äî —Ä—è–¥–æ–∫. –§—É–Ω–∫—Ü—ñ—è –ø–µ—Ä–µ–≤—ñ—Ä—è—î —ó—ó –Ω–∞ –≤–º—ñ—Å—Ç —Å–ª—ñ–≤ spam —ñ sale. –Ø–∫—â–æ –∑–Ω–∞–π—à–ª–∏ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–µ —Å–ª–æ–≤–æ, —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î true, —è–∫—â–æ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–∏—Ö —Å–ª—ñ–≤ –Ω–µ–º–∞—î —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î false. –°–ª–æ–≤–∞ –≤ —Ä—è–¥–∫—É –º–æ–∂—É—Ç—å –±—É—Ç–∏ –≤ –¥–æ–≤—ñ–ª—å–Ω–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ.
console.log("–û–≥–æ-–≥–æ –ø–æ–¥–∏–≤—ñ—Ç—å—Å—è —è–∫—ñ —É –Ω–∞—Å SpAm —Ç–∞, –Ω–∞–≤—ñ—Ç—å, SAle");
const checkForSpam = function (message) {
  const changesToMessage = message.split(" ");
  for (let i = 0; i < changesToMessage.length; i++) {
    const element = changesToMessage[i].toLowerCase();

    if (element === "sale" || element === "spam") {
      return false; // Return true if no "sale" or "spam" is found in any word
    }
    //   return true; –Ω–µ –Ω–∞ —Ç–æ–º—É –º—ñ—Å—Ü—ñ
  }
  return true; // Return true if no "sale" or "spam" is found in any word
};
const spamFunction = function (params) {
  if (params === true) {
    //   —á–æ–≥–æ –≤–æ–Ω–æ –Ω–µ –ø—Ä–∞—Ü—é–≤–∞–ª–æ –∫–æ–ª–∏ –±—É–ª–∏ return?
    console.log("—Ä–µ–∫–ª–∞–º–∞ –Ω–æ—Ä–º–∞–ª—å–Ω–∞");
  }
  //   —á–æ–≥–æ –≤–æ–Ω–æ –Ω–µ –ø—Ä–∞—Ü—é–≤–∞–ª–æ –∫–æ–ª–∏ –±—É–ª–∏ return?
  else {
    console.log("—Ä–µ–∫–ª–∞–º–∞ –∑—ñ —Å–ø–∞–º–æ–º");
  }
};
spamFunction(checkForSpam("–û–≥–æ-–≥–æ –ø–æ–¥–∏–≤—ñ—Ç—å—Å—è —è–∫—ñ —É –Ω–∞—Å SpAm —Ç–∞, –Ω–∞–≤—ñ—Ç—å, SAle"));
spamFunction(checkForSpam("–¶–µ –±–µ–∑–ø–µ—á–Ω–∞ —Ä–µ–∫–ª–∞–º–∞ –±–µ–∑ —Å–ø–∞–º—É"));
// –ó–∞–≤–¥–∞–Ω–Ω—è 6
// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª–æ–º:
// –ü—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –ø—Ä–æ–ø–æ–Ω—É—î—Ç—å—Å—è –≤ prompt –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ. –í–≤–µ–¥–µ–Ω–Ω—è –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è –≤ –∑–º—ñ–Ω–Ω—É input —ñ –¥–æ–¥–∞—î—Ç—å—Å—è –≤ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª numbers. (–∑—Ä–æ–±–ª–µ–Ω–æ)
// –û–ø–µ—Ä–∞—Ü—ñ—è –≤–≤–µ–¥–µ–Ω–Ω—è —á–∏—Å–ª–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º —ñ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ –º–∞—Å–∏–≤ —Ç—Ä–∏–≤–∞—î –¥–æ —Ç–∏—Ö –ø–æ—Ä, –ø—ñ—Ä, –ø–æ–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –Ω–∞—Ç–∏—Å–Ω–µ Cancel –≤ prompt. (–∑—Ä–æ–±–ª–µ–Ω–æ)
// –ü—ñ—Å–ª—è —Ç–æ–≥–æ —è–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—Ä–∏–ø–∏–Ω–∏–≤ –≤–≤–µ–¥–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ Cancel, —è–∫—â–æ –º–∞—Å–∏–≤ –Ω–µ –ø–æ—Ä–æ–∂–Ω—ñ–π, –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å—É–º—É –≤—Å—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –º–∞—Å–∏–≤—É —ñ –∑–∞–ø–∏—Å–∞—Ç–∏ —ó—ó –≤ –∑–º—ñ–Ω–Ω—É total. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª for –∞–±–æ for...of. –ü—ñ—Å–ª—è —á–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å –≤–∏–≤–µ–¥–∏ —Ä—è–¥–æ–∫ '–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ —á–∏—Å–µ–ª –¥–æ—Ä—ñ–≤–Ω—é—î [—Å—É–º–∞]'.
// üîî –†–æ–±–∏—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Ç–æ–≥–æ, —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤—ñ–≤ —Å–∞–º–µ —á–∏—Å–ª–æ, –∞ –Ω–µ –¥–æ–≤—ñ–ª—å–Ω–∏–π –Ω–∞–±—ñ—Ä —Å–∏–º–≤–æ–ª—ñ–≤, –Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ. –Ø–∫—â–æ —Ö–æ—á–µ—à, –≤ —Ä–∞–∑—ñ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–µ–¥–µ–Ω–Ω—è, –ø–æ–∫–∞–∑—É–π alert –∑ —Ç–µ–∫—Å—Ç–æ–º '–ë—É–ª–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑', –ø—Ä–∏ —Ü—å–æ–º—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç prompt –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏ –≤ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ, –ø—ñ—Å–ª—è —á–æ–≥–æ –∑–Ω–æ–≤—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ –ø—Ä–æ–ø–æ–Ω—É—î—Ç—å—Å—è –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –≤ prompt.

// —á–æ–≥–æ –∫–æ–ª–∏ —è –∫–µ–Ω—Å–µ–ª—é prompt, —Ç–æ –π–¥–µ object? (—Ü–µ –ø—Ä–æ—Å—Ç–æ –±–∞–≥ —Ö—Ä–æ–º–∞)
// console.log(typeof prompt());
let numbers = [];
let total = 0;
let input;
const sum = function (array) {
  // —è–∫ –ø—Ä–∏–±—Ä–∞—Ç–∏ NULL —ñ UNDEFINED
  for (let j = 0; j < array.length; j++) {
    const element = Number(array[j]);
    if (!isNaN(element)) {
      continue;
    } else {
      console.log(element);
      total += array;
      return total;
    }
  }
};
while (input !== null) {
  input = prompt("–í–ø–∏—à–∏ —á–∏—Å–ª–∞");

  if (!isNaN(input)) {
    numbers.push(input);
  } else {
    alert("–ë—É–ª–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑");
  }
  console.log(numbers);
  // if (input === null && numbers !== []) { the condition will be always true, —á–æ–≥–æ?
  // —á–æ–≥–æ—Å—å –¥–æ–¥–∞—î —â–µ null –≤ —Å–ø–∏—Å–æ–∫
  if ((input === null && numbers != []) || input === "") {
    break;
  }
}
console.log(sum(numbers));
// –ó–∞–≤–¥–∞–Ω–Ω—è 7 ‚Äî –¥–æ–¥–∞—Ç–∫–æ–≤–µ, –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ

// –Ñ –º–∞—Å–∏–≤ logins –∑ –ª–æ–≥—ñ–Ω–∞–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤. –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–æ–¥–∞–≤–∞–Ω–Ω—è
const loginPrompt = prompt("–≤–≤–µ–¥–∏ —Å–≤—ñ–π –ª–æ–≥—ñ–Ω");
const login = loginPrompt.toLowerCase();
const allLoggins = ["zombachock", "minecrafter", "spartanek", "krutelyk"];
// –ª–æ–≥—ñ–Ω–∞ –≤ –º–∞—Å–∏–≤ logins.–õ–æ–≥—ñ–Ω, —è–∫–∏–π –¥–æ–¥–∞—î—Ç—å—Å—è –ø–æ–≤–∏–Ω–µ–Ω:
// –ø—Ä–æ—Ö–æ–¥–∏—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞ –¥–æ–≤–∂–∏–Ω—É –≤—ñ–¥ 4 –¥–æ 16-—Ç–∏ —Å–∏–º–≤–æ–ª—ñ–≤ –≤–∫–ª—é—á–Ω–æ
// –±—É—Ç–∏ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º, —Ç–æ–±—Ç–æ –±—É—Ç–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ–º –≤ –º–∞—Å–∏–≤—ñ logins
// –†–æ–∑–±–∏–π –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞ –ø—ñ–¥–∑–∞–¥–∞—á—ñ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ–π.
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é isLoginValid(login), –≤ —è–∫—ñ–π –ø–µ—Ä–µ–≤—ñ—Ä –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–∏–º–≤–æ–ª—ñ–≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ login —ñ –ø–æ–≤–µ—Ä–Ω–∏ true –∞–±–æ false –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ç–æ–≥–æ, —á–∏ –ø–æ—Ç—Ä–∞–ø–ª—è—î –¥–æ–≤–∂–∏–Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –≤ –∑–∞–¥–∞–Ω–∏–π –¥—ñ–∞–ø–∞–∑–æ–Ω –≤—ñ–¥ 4-—Ö –¥–æ 16-—Ç–∏ —Å–∏–º–≤–æ–ª—ñ–≤ –≤–∫–ª—é—á–Ω–æ.
const isLoginValid = function name(login) {
  if (login.length >= 4 && login.length <= 16) {
    return true;
  }
  return false;
};
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é isLoginUnique(allLogins, login), —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –ª–æ–≥—ñ–Ω—ñ–≤ —ñ –ª–æ–≥—ñ–Ω, —è–∫–∏–π –¥–æ–¥–∞—î—Ç—å—Å—è, —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —ñ –ø–µ—Ä–µ–≤—ñ—Ä—è—î –Ω–∞—è–≤–Ω—ñ—Å—Ç—å login –≤ –º–∞—Å—Å–∏–≤–µ allLogins, –ø–æ–≤–µ—Ä—Ç–∞—î true —è–∫—â–æ —Ç–∞–∫–æ–≥–æ –ª–æ–≥—ñ–Ω–∞ —â–µ –Ω–µ–º–∞—î —ñ false —è–∫—â–æ –ª–æ–≥—ñ–Ω –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è.
const isLoginUnique = function (allLogins, login) {
  if (!allLogins.includes(login)) {
    return true;
  } else {
    return false;
  }
};
//   for (const eachLogin of allLoggins) {
//     if (login !== eachLogin) {
//       return true;
//     }
//     return false;
//   }
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é addLogin(allLogins, login) —è–∫–∞:
// –ü—Ä–∏–π–º–∞—î –Ω–æ–≤–∏–π –ª–æ–≥—ñ–Ω —ñ –º–∞—Å–∏–≤ –≤—Å—ñ—Ö –ª–æ–≥—ñ–Ω—ñ–≤ —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
const addLogin = function (allLogins, login) {
  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î –≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—å –ª–æ–≥—ñ–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –¥–æ–ø–æ–º—ñ–∂–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é isLoginValid
  if (isLoginValid(login) === true) {
    // –Ø–∫—â–æ –ª–æ–≥—ñ–Ω –≤–∞–ª—ñ–¥–Ω–∏–π, —Ñ—É–Ω–∫—Ü—ñ—è addLogin –ø–µ—Ä–µ–≤—ñ—Ä—è—î —É–Ω—ñ–∫–∞–ª—å–Ω—ñ—Å—Ç—å –ª–æ–≥—ñ–Ω–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ñ—É–Ω–∫—Ü—ñ—ó isLoginUnique
    if (isLoginUnique(login) === true) {
      // –Ø–∫—â–æ isLoginUnique –ø–æ–≤–µ—Ä–Ω–µ true, addLogin –¥–æ–¥–∞—î –Ω–æ–≤–∏–π –ª–æ–≥—ñ–Ω –≤ logins —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ '–õ–æ–≥—ñ–Ω —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–∏–π!'
      console.log("–õ–æ–≥—ñ–Ω —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–∏–π!");
    } else {
      // –Ø–∫—â–æ isLoginUnique –ø–æ–≤–µ—Ä–Ω–µ false, —Ç–æ–¥—ñ addLogin –ù–µ –¥–æ–¥–∞—î –ª–æ–≥—ñ–Ω –≤ –º–∞—Å—Å–∏–≤ –º–∞—Å–∏–≤ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫ '–¢–∞–∫–∏–π –ª–æ–≥—ñ–Ω —É–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è!'
      console.log("–¢–∞–∫–∏–π –ª–æ–≥—ñ–Ω —É–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è!");
      return;
    }
  } else {
    // –Ø–∫—â–æ –ª–æ–≥—ñ–Ω –Ω–µ –≤–∞–ª—ñ–¥–Ω–∏–π, –ø—Ä–∏–ø–∏–Ω–∏—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó addLogin —ñ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ —Ä–∞–¥–æ–∫ '–ü–æ–º–∏–ª–∫–∞! –õ–æ–≥—ñ–Ω –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –≤—ñ–¥ 4 –¥–æ 16 —Å–∏–º–≤–æ–ª—ñ–≤'
    console.log("–ü–æ–º–∏–ª–∫–∞! –õ–æ–≥—ñ–Ω –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ –≤—ñ–¥ 4 –¥–æ 16 —Å–∏–º–≤–æ–ª—ñ–≤");
    return;
  }
};
addLogin(allLogins, login);

console.log("Updated logins:", allLogins);
// üîî –ü—Ä–∏–Ω—Ü–∏–ø —î–¥–∏–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ —Ñ—É–Ω–∫—Ü—ñ—ó ‚Äî –∫–æ–∂–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —Ä–æ–±–∏—Ç—å —â–æ—Å—å –æ–¥–Ω–µ. –¶–µ –¥–æ–∑–≤–æ–ª—è—î –ø–µ—Ä–µ–≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –∫–æ–¥ —ñ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –ª–æ–≥—ñ–∫—É —Ä–æ–±–æ—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç—ñ–ª—å–∫–∏ –≤ –æ–¥–Ω–æ–º—É –º—ñ—Å—Ü—ñ, –Ω–µ –∑–∞—á—ñ–ø–∞—é—á–∏ —Ä–æ–±–æ—Ç—É –ø—Ä–æ–≥—Ä–∞–º–∏ –≤ —Ü—ñ–ª–æ–º—É.
// –ü—Ä–µ–¥–∏–∫–∞—Ç–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –ø–æ–≤–µ—Ä—Ç–∞—é—Ç—å —Ç—ñ–ª—å–∫–∏ true –∞–±–æ false. –¢–∞–∫—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –ø—Ä–∏–π–Ω—è—Ç–æ –Ω–∞–∑–∏–≤–∞—Ç–∏ –ø–æ—á–∏–Ω–∞—é—á–∏ –∑ is: isLoginUnique —ñ isLoginValid –≤ –Ω–∞—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.
// isLoginUnique —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ —î —Ç–∞–∫–∏–π –ª–æ–≥—ñ–Ω –≤ –º–∞—Å–∏–≤—ñ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î true –∞–±–æ false.
// isLoginValid —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –≤–∞–ª—ñ–¥–Ω–∏–π –ª–æ–≥—ñ–Ω —ñ –ø–æ–≤–µ—Ä—Ç–∞—î true –∞–±–æ false.
// addLogin –¥–æ–¥–∞—é—Ç—å —á–∏ –Ω–µ –¥–æ–¥–∞—é—Ç—å –ª–æ–≥—ñ–Ω –≤ –º–∞—Å–∏–≤. –ü—Ä–∏ —Ü—å–æ–º—É –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫ —É–º–æ–≤–∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤–∏–∫–ª–∏–∫—ñ–≤ —ñ–Ω—à–∏—Ö —Ñ—É–Ω–∫—Ü—ñ–π ‚Äî isLoginUnique —ñ isLoginValid.
