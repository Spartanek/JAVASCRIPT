Додає слухача події на елемент.

element.addEventListener(event, handler[, phase])

event — ім'я події, рядок, наприклад click
handler — посилання на функцію, яку треба поставити оброблювачем
phase — необов'язковий аргумент, фаза, на якій обробник повинен спрацювати. Вказується вкрай рідко.


Видаляє слухача. Аргументи ті ж що у addEventListener.

element.removeEventListener(event, handler[, phase])

Copy

Для видалення потрібно передати посилання саме на ту функцію-обробник, яка була призначена в addEventListener. Тому для callback використовують окрему функцію і передають її на ім'я.



Щоб обробити подію, недостатньо знати про те, що це клік або натискання клавіші. Можуть знадобитися деталі: поточне значення текстового поля, елемент на якому відбулася подія, вбудовані методи і інше. Об'єкт події містить цінну інформацію про деталі події і автоматично передається першим аргументом в обробник події.

http://devdocs.io/dom/event

Деякі властивості об'єкта події:

event.type — тип події
event.target — елемент, на якому відбулася подія
event.currentTarget — елемент, на якому спрацював обробник



Деякі події автоматично викликають дію браузера вбудованого по замовчуванню як реакція на певний тип події: перехід по посиланню, відправка форми і т. п. Як правило їх можна, і часто потрібно, скасувати.

Наприклад:

Клік по посиланню ініціює перехід на новий URL вказаний в href посилання.
Відправлення форми — перезавантаження сторінки.

Для скасування дії браузера за замовчуванням, на об'єкті події є стандартний метод.

event.preventDefault()







Події елементів форм
Фокусування



Елемент отримує фокус при натисканні на ньому мишкою, клавіші 'Tab` або вибравши на планшеті. Момент отримання фокусу і втрати дуже важливий, при отриманні фокусу ми можемо довантажити дані для автодоповнення, почати відстежувати зміни. При втраті фокусу — перевірити введені дані.

При фокусуванні на елемент відбувається подія focus, а коли фокус зникає, наприклад відвідувач клацає в іншому місці екрана, відбувається подія blur.

За замовчуванням багато елементів не можуть отримати фокус. Наприклад, якщо клікнути по Div, то фокусування на ньому не відбудеться. До речі, фокус може бути тільки на одному елементі в одиницю часу, і поточний елемент, на якому фокус, доступний як document.activeElement.

Активувати або скасувати фокус можна програмно, викликавши в коді однойменні методи elem.focus () і elem.blur () в елемента.



Подія change

Відбувається після закінчення зміни елемента форми, коли зміна зафіксована. Для input: text або textarea, подія відбудеться не при кожному введенні, а при втраті фокусу, що не завжди зручно.

Наприклад, поки ви набираєте щось у текстовому полі - події немає. Але як тільки фокус пропав, відбудеться подія change. Для інших же елементів, наприклад Select, input: checkbox і input: radio, воно спрацьовує відразу при виборі значення.

Подія input

Спрацьовує тільки на текстових елементах, input: text і textarea, при зміні значення елемента. Чи не чекає втрати фокусу, на відміну від change.

В сучасних браузерах input — найголовніша подія для роботи з текстовим елементом форми. Саме його, а не keydown або keypress, слід використовувати.